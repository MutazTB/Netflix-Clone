{"ast":null,"code":"import _regeneratorRuntime from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/mutaz/Netflix/Netflix-Clone/src/components/ModalMovie/modalMovie.jsx\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction mytrendModal(_ref) {\n  var trend = _ref.trend,\n      show = _ref.show,\n      handleClose = _ref.handleClose;\n\n  function addToFavList(_x, _x2) {\n    return _addToFavList.apply(this, arguments);\n  }\n\n  function _addToFavList() {\n    _addToFavList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(movie, comment) {\n      var url, data, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(process.env.REACT_APP_SERVER, \"/addFavmovie\"); // This should match the required data in the server\n\n              data = {\n                title: movie.title,\n                readyInMinutes: movie.readyInMinutes,\n                vegetarian: movie.vegetarian,\n                sourceUrl: movie.sourceUrl,\n                image: movie.image,\n                summary: movie.summary,\n                instructions: movie.instructions,\n                comment: comment\n              }; // Use Fetch to send POST request\n\n              _context.next = 4;\n              return fetch(url, {\n                method: 'POST',\n                // *GET, POST, PUT, DELETE, etc.\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n              });\n\n            case 4:\n              response = _context.sent;\n              swal(\"Favorite movie\", \"You added a new movie\", \"success\");\n              handleClose();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addToFavList.apply(this, arguments);\n  }\n\n  console.log(trend);\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \" \", trend.title, \" \")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Modal body text goes here.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Save changes\")));\n}\n\nexport default mytrendModal;","map":{"version":3,"sources":["/home/mutaz/Netflix/Netflix-Clone/src/components/ModalMovie/modalMovie.jsx"],"names":["React","Button","Modal","mytrendModal","trend","show","handleClose","addToFavList","movie","comment","url","process","env","REACT_APP_SERVER","data","title","readyInMinutes","vegetarian","sourceUrl","image","summary","instructions","fetch","method","headers","body","JSON","stringify","response","swal","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,SAASC,YAAT,OAAoD;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAAA,WAEjCC,YAFiC;AAAA;AAAA;;AAAA;AAAA,6EAEhD,iBAA4BC,KAA5B,EAAmCC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,cAAAA,GADV,aACmBC,OAAO,CAACC,GAAR,CAAYC,gBAD/B,mBAEI;;AACMC,cAAAA,IAHV,GAGiB;AACXC,gBAAAA,KAAK,EAAGP,KAAK,CAACO,KADH;AAEXC,gBAAAA,cAAc,EAAGR,KAAK,CAACQ,cAFZ;AAGXC,gBAAAA,UAAU,EAAGT,KAAK,CAACS,UAHR;AAIXC,gBAAAA,SAAS,EAAGV,KAAK,CAACU,SAJP;AAKXC,gBAAAA,KAAK,EAAGX,KAAK,CAACW,KALH;AAMXC,gBAAAA,OAAO,EAAGZ,KAAK,CAACY,OANL;AAOXC,gBAAAA,YAAY,EAAGb,KAAK,CAACa,YAPV;AAQXZ,gBAAAA,OAAO,EAAGA;AARC,eAHjB,EAaI;;AAbJ;AAAA,qBAc2Ba,KAAK,CAACZ,GAAD,EAAM;AAChCa,gBAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT,CAEP;;AAFO,iBAFuB;AAMhCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAN0B,CAML;;AANK,eAAN,CAdhC;;AAAA;AAcUc,cAAAA,QAdV;AAsBIC,cAAAA,IAAI,CAAC,gBAAD,EAAmB,uBAAnB,EAA4C,SAA5C,CAAJ;AACAvB,cAAAA,WAAW;;AAvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFgD;AAAA;AAAA;;AA6BlDwB,EAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAZ;AACA,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,IAAb;AAAmB,IAAA,MAAM,EAAEC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAeF,KAAK,CAACW,KAArB,MADF,CADF,eAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CALF,eASE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CATF,CADF;AAgBD;;AAED,eAAeZ,YAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction mytrendModal({ trend, show, handleClose }) {\n\n    async function addToFavList(movie, comment){\n        const url = `${process.env.REACT_APP_SERVER}/addFavmovie`\n        // This should match the required data in the server\n        const data = {\n          title : movie.title,\n          readyInMinutes : movie.readyInMinutes,\n          vegetarian : movie.vegetarian,\n          sourceUrl : movie.sourceUrl, \n          image : movie.image, \n          summary : movie.summary, \n          instructions : movie.instructions, \n          comment : comment\n        }\n        // Use Fetch to send POST request\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        swal(\"Favorite movie\", \"You added a new movie\", \"success\");\n        handleClose();\n      }\n\n\n  console.log(trend);\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title> {trend.title} </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>Modal body text goes here.</p>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default mytrendModal;\n"]},"metadata":{},"sourceType":"module"}