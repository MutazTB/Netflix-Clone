{"ast":null,"code":"import _regeneratorRuntime from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mutaz/Netflix/Netflix-Clone/src/components/home/Home.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar/navBar\";\nimport MyMovieList from \"../MovieList/movieList\";\nexport default function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  function getData() {\n    return _getData.apply(this, arguments);\n  }\n\n  function _getData() {\n    _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(process.env, \"/trending\"));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              setMovies(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getData.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, Movies && /*#__PURE__*/React.createElement(MyMovieList, {\n    Movie: Movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  })));\n}","map":{"version":3,"sources":["/home/mutaz/Netflix/Netflix-Clone/src/components/home/Home.jsx"],"names":["React","useEffect","useState","Navbar","MyMovieList","Home","Movies","setMovies","getData","fetch","process","env","response","json","data","display","flexWrap","justifyContent"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA,kBACAH,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACnBI,MADmB;AAAA,MACZC,SADY;;AAAA,WAGXC,OAHW;AAAA;AAAA;;AAAA;AAAA,wEAG1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACsBC,KAAK,WAAIC,OAAO,CAACC,GAAZ,eAD3B;;AAAA;AACMC,cAAAA,QADN;AAAA;AAAA,qBAGmBA,QAAQ,CAACC,IAAT,EAHnB;;AAAA;AAGMC,cAAAA,IAHN;AAIEP,cAAAA,SAAS,CAACO,IAAD,CAAT;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAH0B;AAAA;AAAA;;AAU1Bb,EAAAA,SAAS,CAAC,YAAI;AACVO,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI,uDACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,QAAQ,EAAC,MAA1B;AAAiCC,MAAAA,cAAc,EAAC;AAAhD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIX,MAAM,iBAAI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,CAFA,CADJ;AAUH","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Navbar from \"../Navbar/navBar\"\nimport MyMovieList from \"../MovieList/movieList\";\n\nexport default function Home(){\n    const [Movies,setMovies]= useState([]);\n\n    async function getData(){\n      let response= await fetch(`${process.env}/trending`);\n\n      let data = await response.json();      \n      setMovies(data);              \n        }\n    \n    useEffect(()=>{\n        getData();\n    },[]);\n    return(\n        <>       \n        <Navbar/>\n        <div style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"space-between\"}}>\n          { Movies && <MyMovieList Movie={Movies}/>}  \n        </div>\n\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}