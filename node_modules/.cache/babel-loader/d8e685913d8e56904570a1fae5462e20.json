{"ast":null,"code":"import _regeneratorRuntime from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/mutaz/Netflix/Netflix-Clone/src/components/ModalMovie/modalMovie.jsx\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { Form } from \"react-bootstrap\";\n\nfunction mytrendModal(_ref) {\n  var _this = this;\n\n  var movies = _ref.movies,\n      show = _ref.show,\n      handleClose = _ref.handleClose,\n      addToFavList = _ref.addToFavList;\n  return function (movies, addToFavList) {\n    function handelFormSubmit(e) {\n      e.preventDefault();\n      var comment = e.target.comment.value; // To send a POST request to save the recipe in our database as favorite recipe\n\n      addToFavList(movies, comment);\n    }\n\n    function addToFavList(_x, _x2) {\n      return _addToFavList.apply(this, arguments);\n    }\n\n    function _addToFavList() {\n      _addToFavList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(movies, comment) {\n        var url, data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(process.env.REACT_APP_SERVER, \"/addFavmovies\"); // This should match the required data in the server\n\n                data = {\n                  title: movies.title,\n                  poster_path: movies.poster_path,\n                  overview: movies.overview,\n                  comment: comment\n                }; // Use Fetch to send POST request\n\n                _context.next = 4;\n                return fetch(url, {\n                  method: 'POST',\n                  // *GET, POST, PUT, DELETE, etc.\n                  headers: {\n                    'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                  },\n                  body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n                });\n\n              case 4:\n                response = _context.sent;\n                swal(\"Favorite movies\", \"You added a new movies\", \"success\");\n                handleClose();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _addToFavList.apply(this, arguments);\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \" titlee \")), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handelFormSubmit,\n      style: {\n        margin: \"0 10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"comment\",\n      type: \"text\",\n      placeholder: \"Enter Comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Save changes\")));\n  }(movies, addToFavList);\n}\n\nexport default mytrendModal;","map":{"version":3,"sources":["/home/mutaz/Netflix/Netflix-Clone/src/components/ModalMovie/modalMovie.jsx"],"names":["React","Button","Modal","swal","Form","mytrendModal","movies","show","handleClose","addToFavList","handelFormSubmit","e","preventDefault","comment","target","value","url","process","env","REACT_APP_SERVER","data","title","poster_path","overview","fetch","method","headers","body","JSON","stringify","response","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { Form } from \"react-bootstrap\";\n\nfunction mytrendModal({ movies, show, handleClose,addToFavList }) {\n\n    function handelFormSubmit(e){\n        e.preventDefault();\n        let comment = e.target.comment.value;\n        // To send a POST request to save the recipe in our database as favorite recipe\n        addToFavList(movies, comment);\n      }\n\n    async function addToFavList(movies, comment){\n        const url = `${process.env.REACT_APP_SERVER}/addFavmovies`\n        // This should match the required data in the server\n        const data = {\n          title : movies.title,\n          poster_path : movies.poster_path,\n          overview : movies.overview,          \n          comment : comment\n        }\n        // Use Fetch to send POST request\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        swal(\"Favorite movies\", \"You added a new movies\", \"success\");\n        handleClose();\n      }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title> titlee </Modal.Title>\n      </Modal.Header>\n      <Form onSubmit={handelFormSubmit} style={{margin: \"0 10px\"}}> \n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Comment</Form.Label>\n            <Form.Control name=\"comment\" type=\"text\" placeholder=\"Enter Comment\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      <Modal.Footer>\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default mytrendModal;\n"]},"metadata":{},"sourceType":"module"}