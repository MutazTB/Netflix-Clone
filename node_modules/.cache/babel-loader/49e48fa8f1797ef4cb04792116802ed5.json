{"ast":null,"code":"import _regeneratorRuntime from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mutaz/Netflix/Netflix-Clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mutaz/Netflix/Netflix-Clone/src/components/FavList /favlist.jsx\";\nimport { useState, useEffect } from \"react\";\nimport NavBar from \"../Navbar/navBar\";\nimport Myfavmovie from \"./favmovie\";\nexport default function favMovie() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      favMovie = _useState2[0],\n      setfavMovie = _useState2[1];\n\n  function getFavMovie() {\n    return _getFavMovie.apply(this, arguments);\n  }\n\n  function _getFavMovie() {\n    _getFavMovie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(process.env.REACT_APP_SERVER, \"/getMovies\"));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              setfavMovie(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getFavMovie.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getFavMovie();\n  }, []);\n  console.log(favMovie);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"From favMovie Page\"), /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, favMovie && favMovie.map(function (movie) {\n    return /*#__PURE__*/React.createElement(Myfavmovie, {\n      key: movie.id,\n      getFavMovie: getFavMovie,\n      movie: movie,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/home/mutaz/Netflix/Netflix-Clone/src/components/FavList /favlist.jsx"],"names":["useState","useEffect","NavBar","Myfavmovie","favMovie","setfavMovie","getFavMovie","fetch","process","env","REACT_APP_SERVER","response","json","data","console","log","display","flexWrap","justifyContent","map","movie","id"],"mappings":";;;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACDJ,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,MAC1BI,QAD0B;AAAA,MAChBC,WADgB;;AAAA,WAGlBC,WAHkB;AAAA;AAAA;;AAAA;AAAA,4EAGjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyBC,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAhB,gBAD9B;;AAAA;AACQC,cAAAA,QADR;AAAA;AAAA,qBAEqBA,QAAQ,CAACC,IAAT,EAFrB;;AAAA;AAEQC,cAAAA,IAFR;AAIER,cAAAA,WAAW,CAACQ,IAAD,CAAX;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHiC;AAAA;AAAA;;AAUjCZ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AACE,IAAA,KAAK,EAAE;AACLY,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGd,QAAQ,IACPA,QAAQ,CAACe,GAAT,CAAa,UAACC,KAAD,EAAW;AACtB,wBACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,WAAW,EAAEf,WAFf;AAGE,MAAA,KAAK,EAAEc,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARD,CATJ,CAHF,CADF;AAyBD","sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport NavBar from \"../Navbar/navBar\";\nimport Myfavmovie from \"./favmovie\";\n\nexport default function favMovie() {\n  const [favMovie, setfavMovie] = useState([]);\n\n  async function getFavMovie() {\n    const response = await fetch(`${process.env.REACT_APP_SERVER}/getMovies`);\n    const data = await response.json();\n\n    setfavMovie(data);\n  }\n\n  useEffect(() => {\n    getFavMovie();\n  }, []);\n\n  console.log(favMovie);\n  return (\n    <>\n      <h1>From favMovie Page</h1>\n      <NavBar />\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n       \n        {favMovie &&\n          favMovie.map((movie) => {\n            return (\n              <Myfavmovie\n                key={movie.id}\n                getFavMovie={getFavMovie}\n                movie={movie}\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}